{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifgridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifgridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,sBAAMC,SATS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACzBR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAKjB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAlBiB,SAACP,GACtBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,a,+BCRdK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACkCC,UAAUH,GAD5C,+DAEJI,MAAMF,GAFF,cAEjBG,EAFiB,gBAGFA,EAAKC,OAHH,uBAGhBC,EAHgB,EAGhBA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATnB,kBAehBM,GAfgB,4CAAH,sDCCXO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGjC,OACI,sBAAKc,UAAU,QAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHDO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEhBhB,mBAAS,CAC/BuB,KAAK,GACLa,SAAS,IAJ6B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAiC1C,OA1BAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GAEFC,YAAW,WACPJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEd,UAQR,CAACpB,IASIqB,ED3BwBM,CAAa3B,GAAhCa,EAJ2B,EAIhCN,KAAaa,EAJmB,EAInBA,QAUhB,OACI,qCACE,6BAAKpB,IACJoB,GAAW,wCAGd,qBAAKJ,UAAU,YAAf,SAGYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIC,aE1BpBiB,EAAe,WAAM,MAGE5C,mBAAS,CAAC,cAHZ,mBAG3B6C,EAH2B,KAGf9C,EAHe,KAWlC,OACQ,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ8C,EAAWpB,KAAI,SAAAT,GAAQ,OACxB,cAAC,EAAD,CAECA,SAAUA,GADNA,YCnBxB8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.174c09ca.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleinputchange =(e)=>{\r\n        console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handlesubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n           setCategories( cats => [inputValue,...cats]); \r\n           setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handlesubmit}>\r\n            <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleinputchange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n    export const getGifs = async (category) =>{\r\n        const url=`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=B8teREpZn6MxQf0q36HCqWCKInvyQCrd`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n\r\n    })\r\n   \r\n    return gifs;\r\n    }\r\n\r\n    //getGifs();","import React from 'react'\r\n\r\nexport const GifgridItem = ({ title, url}) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card \">\r\n          <img src={url} alt={title}/>\r\n          <p>{title}</p>\r\n          \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifgridItem } from './GifgridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n//     const [images,setImages] = useState([]);\r\n\r\nconst {data:images, loading} = useFetchGifs(category);\r\n\r\n// console.log(data);\r\n// console.log(loading);\r\n\r\n// useEffect(() =>{\r\n//     getGifs(category)\r\n//     .then(setImages);\r\n// },[category])\r\n\r\n    return (\r\n        <>\r\n          <h3>{category}</h3>\r\n          {loading && <p>Loading</p>}\r\n           {/*loading? 'Cargando...':'Data cargada'*/}\r\n\r\n        <div className=\"card-grid\">\r\n          \r\n                {\r\n                    images.map(img => (\r\n                        <GifgridItem \r\n                        key={img.id}\r\n                        {...img}\r\n                        />\r\n                    ))\r\n                }\r\n               \r\n        </div> \r\n        </>\r\n    )\r\n}\r\n","\r\nimport {useState,useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nexport const useFetchGifs = (category) => {\r\n  \r\nconst [state, setstate] = useState({\r\n    data:[],\r\n    loading: true\r\n});\r\n\r\nuseEffect(() =>{ // efecto que se dispara a; cambiar la categoria\r\n    getGifs(category) //Peticion http\r\n    .then(imgs => {\r\n\r\n        setTimeout(() => {\r\n            setstate({\r\n                data:imgs,\r\n                loading:false\r\n            });\r\n        },3000);\r\n\r\n      \r\n        \r\n    })\r\n   \r\n\r\n\r\n},[category])\r\n\r\n// setTimeout(()=>{\r\n//     setstate({\r\n//         data: [1,2,3,4,5,6,7],\r\n//         loading: false\r\n//     })\r\n// },3000);\r\n\r\nreturn state;\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n//const categories=['One puch', 'DBZ','fifa'];\r\n\r\nconst [categories, setCategories] = useState(['One Punch']);\r\n    \r\n// const handleAdd = () => {\r\n//     setCategories([...categories,'Hunter']);\r\n// }\r\n\r\n\r\n\r\nreturn (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n           \r\n            <ol>\r\n                {\r\n                    categories.map(category => ( \r\n                   <GifGrid\r\n                   key={category}\r\n                    category={category}\r\n                    />\r\n                    ))\r\n\r\n                }\r\n            </ol>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp'\n\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}